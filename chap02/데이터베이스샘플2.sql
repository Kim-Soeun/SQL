create database if not exists studentex;   -- 데이터베이스 중복 생성 방지
use studentex;


create table 대학생
(
	이름 varchar(100) null,     
	학번 varchar(11) null,
	생년월일 varchar(6) null,
	성별 varchar(1) null,
	입학년도 varchar(4) null,
	전화번호 varchar(11) null,
	학과코드 varchar(3) null
);

create table 시험
(
	학번 varchar(11) null,
	국어 int,
	영어 int,
	수학 int
);

create table 교수
(
	학과코드 varchar(3) null comment '학과코드',
	학과명 varchar(100) null comment '학과명',
	학과담당교수 varchar(100) null comment '학과담당교수'
);

INSERT INTO 대학생 (이름, 학번, 생년월일, 성별, 입학년도, 전화번호, 학과코드) VALUES ('데미안', '16971504', '941112', 'M', '2016', '01010523220', '103');
INSERT INTO 대학생 (이름, 학번, 생년월일, 성별, 입학년도, 전화번호, 학과코드) VALUES ('엘로이', '16945259', '930714', 'M', '2016', '01074494079', '102');
INSERT INTO 대학생 (이름, 학번, 생년월일, 성별, 입학년도, 전화번호, 학과코드) VALUES ('헨리', '16885578', '950603', 'M', '2016', '01073236179', '103');
INSERT INTO 대학생 (이름, 학번, 생년월일, 성별, 입학년도, 전화번호, 학과코드) VALUES ('안나', '16626786', '880816', 'F', '2016', '01098539654', '103');
INSERT INTO 대학생 (이름, 학번, 생년월일, 성별, 입학년도, 전화번호, 학과코드) VALUES ('루카스', '16543708', '950304', 'M', '2016', '01095544143', '100');
INSERT INTO 대학생 (이름, 학번, 생년월일, 성별, 입학년도, 전화번호, 학과코드) VALUES ('릴리', '15877030', '901215', 'F', '2015', '01065293405', '102');
INSERT INTO 대학생 (이름, 학번, 생년월일, 성별, 입학년도, 전화번호, 학과코드) VALUES ('루나', '15788253', '900908', 'F', '2015', '01086195344', '106');
INSERT INTO 대학생 (이름, 학번, 생년월일, 성별, 입학년도, 전화번호, 학과코드) VALUES ('페뷔스', '15700939', '940316', 'M', '2015', '01097435136', '100');
INSERT INTO 대학생 (이름, 학번, 생년월일, 성별, 입학년도, 전화번호, 학과코드) VALUES ('카밀라', '15589962', '940619', 'F', '2015', '01012348900', '106');
INSERT INTO 대학생 (이름, 학번, 생년월일, 성별, 입학년도, 전화번호, 학과코드) VALUES ('쥬리', '15578271', '950613', 'F', '2015', '01036724305', '101');
INSERT INTO 대학생 (이름, 학번, 생년월일, 성별, 입학년도, 전화번호, 학과코드) VALUES ('지나', '15309170', '901201', 'F', '2015', '01065692589', '102');
INSERT INTO 대학생 (이름, 학번, 생년월일, 성별, 입학년도, 전화번호, 학과코드) VALUES ('벤자민', '14939257', '900602', 'M', '2014', '01013155385', '100');
INSERT INTO 대학생 (이름, 학번, 생년월일, 성별, 입학년도, 전화번호, 학과코드) VALUES ('테드', '14885530', '940216', 'M', '2014', '01030037337', '103');
INSERT INTO 대학생 (이름, 학번, 생년월일, 성별, 입학년도, 전화번호, 학과코드) VALUES ('엘리언', '14562369', '921015', 'M', '2014', '01019829629', '105');
INSERT INTO 대학생 (이름, 학번, 생년월일, 성별, 입학년도, 전화번호, 학과코드) VALUES ('테오', '14484171', '940315', 'M', '2014', '01034824739', '105');
INSERT INTO 대학생 (이름, 학번, 생년월일, 성별, 입학년도, 전화번호, 학과코드) VALUES ('앤디', '14362190', '940420', 'M', '2014', '01011193251', '100');
INSERT INTO 대학생 (이름, 학번, 생년월일, 성별, 입학년도, 전화번호, 학과코드) VALUES ('케드릭', '13949165', '950817', 'M', '2013', '01051881015', '101');
INSERT INTO 대학생 (이름, 학번, 생년월일, 성별, 입학년도, 전화번호, 학과코드) VALUES ('이안', '13753261', '920111', 'M', '2013', '01068381091', '104');
INSERT INTO 대학생 (이름, 학번, 생년월일, 성별, 입학년도, 전화번호, 학과코드) VALUES ('데이지', '13740398', '951023', 'F', '2013', '01011322531', '103');
INSERT INTO 대학생 (이름, 학번, 생년월일, 성별, 입학년도, 전화번호, 학과코드) VALUES ('이든', '13585677', '951022', 'M', '2013', '01091134045', '104');
INSERT INTO 대학생 (이름, 학번, 생년월일, 성별, 입학년도, 전화번호, 학과코드) VALUES ('헬리오', '13551644', '950716', 'M', '2013', '01074337853', '103');
INSERT INTO 대학생 (이름, 학번, 생년월일, 성별, 입학년도, 전화번호, 학과코드) VALUES ('로이드', '13550256', '870527', 'M', '2013', '01032421470', '103');
INSERT INTO 대학생 (이름, 학번, 생년월일, 성별, 입학년도, 전화번호, 학과코드) VALUES ('제시카', '13500861', '881123', 'F', '2013', '01016400380', '102');
INSERT INTO 대학생 (이름, 학번, 생년월일, 성별, 입학년도, 전화번호, 학과코드) VALUES ('제이', '12938335', '890102', 'M', '2012', '01071757377', '100');
INSERT INTO 대학생 (이름, 학번, 생년월일, 성별, 입학년도, 전화번호, 학과코드) VALUES ('엘라', '12790181', '920916', 'F', '2012', '01063802062', '100');
INSERT INTO 대학생 (이름, 학번, 생년월일, 성별, 입학년도, 전화번호, 학과코드) VALUES ('제레미', '12676231', '891015', 'M', '2012', '01013403272', '100');
INSERT INTO 대학생 (이름, 학번, 생년월일, 성별, 입학년도, 전화번호, 학과코드) VALUES ('셀레나', '12665540', '880317', 'F', '2012', '01085524698', '100');
INSERT INTO 대학생 (이름, 학번, 생년월일, 성별, 입학년도, 전화번호, 학과코드) VALUES ('네로', '12649105', '880213', 'M', '2012', '01015780578', '106');
INSERT INTO 대학생 (이름, 학번, 생년월일, 성별, 입학년도, 전화번호, 학과코드) VALUES ('제니', '12515986', '941015', 'F', '2012', '01034114041', '102');
INSERT INTO 대학생 (이름, 학번, 생년월일, 성별, 입학년도, 전화번호, 학과코드) VALUES ('메리', '11972722', '880821', 'F', '2011', '01047526572', '104');
INSERT INTO 대학생 (이름, 학번, 생년월일, 성별, 입학년도, 전화번호, 학과코드) VALUES ('제이드', '11948285', '950227', 'M', '2011', '01083413212', '106');
INSERT INTO 대학생 (이름, 학번, 생년월일, 성별, 입학년도, 전화번호, 학과코드) VALUES ('이시스', '11933250', '920621', 'F', '2011', '01098066965', '102');
INSERT INTO 대학생 (이름, 학번, 생년월일, 성별, 입학년도, 전화번호, 학과코드) VALUES ('루이', '11822923', '911108', 'M', '2011', '01013240679', '105');
INSERT INTO 대학생 (이름, 학번, 생년월일, 성별, 입학년도, 전화번호, 학과코드) VALUES ('카이', '11663197', '881109', 'M', '2011', '01078003753', '104');
INSERT INTO 대학생 (이름, 학번, 생년월일, 성별, 입학년도, 전화번호, 학과코드) VALUES ('알렉스', '11476583', '880715', 'M', '2011', '01084131154', '100');
INSERT INTO 대학생 (이름, 학번, 생년월일, 성별, 입학년도, 전화번호, 학과코드) VALUES ('제이콥', '11459913', '910118', 'M', '2011', '01088494302', '105');
INSERT INTO 대학생 (이름, 학번, 생년월일, 성별, 입학년도, 전화번호, 학과코드) VALUES ('앤드류', '11337407', '921116', 'M', '2011', '01075919845', '104');
INSERT INTO 대학생 (이름, 학번, 생년월일, 성별, 입학년도, 전화번호, 학과코드) VALUES ('레이첼', '10998709', '951221', 'F', '2010', '01059763406', '104');
INSERT INTO 대학생 (이름, 학번, 생년월일, 성별, 입학년도, 전화번호, 학과코드) VALUES ('엘렌', '10955111', '900810', 'F', '2010', '01011434540', '100');
INSERT INTO 대학생 (이름, 학번, 생년월일, 성별, 입학년도, 전화번호, 학과코드) VALUES ('마리아', '10893477', '930602', 'F', '2010', '01070951359', '104');
INSERT INTO 대학생 (이름, 학번, 생년월일, 성별, 입학년도, 전화번호, 학과코드) VALUES ('리안', '10804413', '930603', 'F', '2010', '01086189285', '105');
INSERT INTO 대학생 (이름, 학번, 생년월일, 성별, 입학년도, 전화번호, 학과코드) VALUES ('저스틴', '10617672', '900106', 'M', '2010', '01017910606', '105');
INSERT INTO 대학생 (이름, 학번, 생년월일, 성별, 입학년도, 전화번호, 학과코드) VALUES ('엔젤라', '10615715', '871017', 'F', '2010', '01020461504', '102');
INSERT INTO 대학생 (이름, 학번, 생년월일, 성별, 입학년도, 전화번호, 학과코드) VALUES ('로미오', '10525777', '951218', 'M', '2010', '01026394815', '105');
INSERT INTO 대학생 (이름, 학번, 생년월일, 성별, 입학년도, 전화번호, 학과코드) VALUES ('세라', '10433607', '920215', 'F', '2010', '01094659677', '104');
INSERT INTO 대학생 (이름, 학번, 생년월일, 성별, 입학년도, 전화번호, 학과코드) VALUES ('루시', '10366365', '900121', 'F', '2010', '01048965286', '105');
INSERT INTO 대학생 (이름, 학번, 생년월일, 성별, 입학년도, 전화번호, 학과코드) VALUES ('도로시', '10284247', '871122', 'F', '2010', '01094513314', '105');
INSERT INTO 대학생 (이름, 학번, 생년월일, 성별, 입학년도, 전화번호, 학과코드) VALUES ('올리버', '10276637', '950723', 'M', '2010', '01075965847', '102');
INSERT INTO 대학생 (이름, 학번, 생년월일, 성별, 입학년도, 전화번호, 학과코드) VALUES ('제이크', '09981340', '920217', 'M', '2009', '01067798684', '101');
INSERT INTO 대학생 (이름, 학번, 생년월일, 성별, 입학년도, 전화번호, 학과코드) VALUES ('테디', '09946130', '870523', 'M', '2009', '01075437977', '103');
INSERT INTO 대학생 (이름, 학번, 생년월일, 성별, 입학년도, 전화번호, 학과코드) VALUES ('레이나', '09839224', '940916', 'F', '2009', '01037190604', '103');
INSERT INTO 대학생 (이름, 학번, 생년월일, 성별, 입학년도, 전화번호, 학과코드) VALUES ('하니', '09791710', '881126', 'F', '2009', '01066181754', '103');
INSERT INTO 대학생 (이름, 학번, 생년월일, 성별, 입학년도, 전화번호, 학과코드) VALUES ('라이언', '09714111', '880510', 'M', '2009', '01027200637', '103');
INSERT INTO 대학생 (이름, 학번, 생년월일, 성별, 입학년도, 전화번호, 학과코드) VALUES ('엘리', '09500575', '950208', 'F', '2009', '01033416716', '102');
INSERT INTO 대학생 (이름, 학번, 생년월일, 성별, 입학년도, 전화번호, 학과코드) VALUES ('겔런트', '09468667', '911023', 'M', '2009', '01051097227', '104');
INSERT INTO 대학생 (이름, 학번, 생년월일, 성별, 입학년도, 전화번호, 학과코드) VALUES ('제임스', '09374395', '880314', 'M', '2009', '01045999556', '101');
INSERT INTO 대학생 (이름, 학번, 생년월일, 성별, 입학년도, 전화번호, 학과코드) VALUES ('카일', '09286476', '931021', 'M', '2009', '01063095593', '101');
INSERT INTO 대학생 (이름, 학번, 생년월일, 성별, 입학년도, 전화번호, 학과코드) VALUES ('베시', '09243989', '910322', 'F', '2009', '01085797848', '102');
INSERT INTO 대학생 (이름, 학번, 생년월일, 성별, 입학년도, 전화번호, 학과코드) VALUES ('리암', '08980159', '920204', 'M', '2008', '01044885321', '106');
INSERT INTO 대학생 (이름, 학번, 생년월일, 성별, 입학년도, 전화번호, 학과코드) VALUES ('레이', '08831906', '950408', 'M', '2008', '01021853474', '101');
INSERT INTO 대학생 (이름, 학번, 생년월일, 성별, 입학년도, 전화번호, 학과코드) VALUES ('제시', '08775794', '911209', 'F', '2008', '01094028708', '102');
INSERT INTO 대학생 (이름, 학번, 생년월일, 성별, 입학년도, 전화번호, 학과코드) VALUES ('루크', '08673644', '930919', 'M', '2008', '01053288396', '102');
INSERT INTO 대학생 (이름, 학번, 생년월일, 성별, 입학년도, 전화번호, 학과코드) VALUES ('페비안', '08648751', '951008', 'M', '2008', '01050119141', '105');
INSERT INTO 대학생 (이름, 학번, 생년월일, 성별, 입학년도, 전화번호, 학과코드) VALUES ('로이', '08506364', '911123', 'M', '2008', '01044349706', '101');
INSERT INTO 대학생 (이름, 학번, 생년월일, 성별, 입학년도, 전화번호, 학과코드) VALUES ('로즈', '08405911', '890506', 'F', '2008', '01036932538', '100');
INSERT INTO 대학생 (이름, 학번, 생년월일, 성별, 입학년도, 전화번호, 학과코드) VALUES ('라일라', '08235560', '911201', 'F', '2008', '01040435754', '103');


INSERT INTO 시험 (학번, 국어, 영어, 수학) VALUES ('09468667',58,80,92);
INSERT INTO 시험 (학번, 국어, 영어, 수학) VALUES ('12649105',44,74,39);
INSERT INTO 시험 (학번, 국어, 영어, 수학) VALUES ('16971504',76,93,83);
INSERT INTO 시험 (학번, 국어, 영어, 수학) VALUES ('13740398',80,58,49);
INSERT INTO 시험 (학번, 국어, 영어, 수학) VALUES ('10284247',98,77,73);
INSERT INTO 시험 (학번, 국어, 영어, 수학) VALUES ('09714111',98,100,41);
INSERT INTO 시험 (학번, 국어, 영어, 수학) VALUES ('08235560',63,35,72);
INSERT INTO 시험 (학번, 국어, 영어, 수학) VALUES ('08831906',72,73,68);
INSERT INTO 시험 (학번, 국어, 영어, 수학) VALUES ('09839224',100,79,45);
INSERT INTO 시험 (학번, 국어, 영어, 수학) VALUES ('10998709',43,61,93);
INSERT INTO 시험 (학번, 국어, 영어, 수학) VALUES ('10525777',82,73,72);
INSERT INTO 시험 (학번, 국어, 영어, 수학) VALUES ('08506364',54,66,52);
INSERT INTO 시험 (학번, 국어, 영어, 수학) VALUES ('13550256',76,46,65);
INSERT INTO 시험 (학번, 국어, 영어, 수학) VALUES ('08405911',73,77,59);
INSERT INTO 시험 (학번, 국어, 영어, 수학) VALUES ('15788253',63,96,100);
INSERT INTO 시험 (학번, 국어, 영어, 수학) VALUES ('10366365',56,96,76);
INSERT INTO 시험 (학번, 국어, 영어, 수학) VALUES ('11822923',82,47,33);
INSERT INTO 시험 (학번, 국어, 영어, 수학) VALUES ('16543708',65,31,42);
INSERT INTO 시험 (학번, 국어, 영어, 수학) VALUES ('08673644',61,85,34);
INSERT INTO 시험 (학번, 국어, 영어, 수학) VALUES ('10804413',40,84,79);
INSERT INTO 시험 (학번, 국어, 영어, 수학) VALUES ('08980159',43,48,98);
INSERT INTO 시험 (학번, 국어, 영어, 수학) VALUES ('15877030',69,69,64);
INSERT INTO 시험 (학번, 국어, 영어, 수학) VALUES ('10893477',86,67,87);
INSERT INTO 시험 (학번, 국어, 영어, 수학) VALUES ('11972722',67,48,89);
INSERT INTO 시험 (학번, 국어, 영어, 수학) VALUES ('09243989',56,95,39);
INSERT INTO 시험 (학번, 국어, 영어, 수학) VALUES ('14939257',37,52,45);
INSERT INTO 시험 (학번, 국어, 영어, 수학) VALUES ('12665540',36,76,61);
INSERT INTO 시험 (학번, 국어, 영어, 수학) VALUES ('16626786',75,76,33);
INSERT INTO 시험 (학번, 국어, 영어, 수학) VALUES ('11476583',31,54,50);
INSERT INTO 시험 (학번, 국어, 영어, 수학) VALUES ('11337407',49,44,99);
INSERT INTO 시험 (학번, 국어, 영어, 수학) VALUES ('14362190',71,38,30);
INSERT INTO 시험 (학번, 국어, 영어, 수학) VALUES ('10615715',93,68,68);
INSERT INTO 시험 (학번, 국어, 영어, 수학) VALUES ('10955111', 52,96,47);
INSERT INTO 시험 (학번, 국어, 영어, 수학) VALUES ('16945259', 95,98,41);
INSERT INTO 시험 (학번, 국어, 영어, 수학) VALUES ('09500575', 81,40,99);
INSERT INTO 시험 (학번, 국어, 영어, 수학) VALUES ('14562369', 34,88,76);
INSERT INTO 시험 (학번, 국어, 영어, 수학) VALUES ('10276637', 90,97,30);
INSERT INTO 시험 (학번, 국어, 영어, 수학) VALUES ('13585677', 37,44,79);
INSERT INTO 시험 (학번, 국어, 영어, 수학) VALUES ('11933250', 57,92,91);
INSERT INTO 시험 (학번, 국어, 영어, 수학) VALUES ('13753261', 89,60,67);
INSERT INTO 시험 (학번, 국어, 영어, 수학) VALUES ('10617672', 76,38,36);
INSERT INTO 시험 (학번, 국어, 영어, 수학) VALUES ('12515986', 71,59,32);
INSERT INTO 시험 (학번, 국어, 영어, 수학) VALUES ('12676231', 99,55,57);
INSERT INTO 시험 (학번, 국어, 영어, 수학) VALUES ('08775794', 86,74,31);
INSERT INTO 시험 (학번, 국어, 영어, 수학) VALUES ('13500861', 99,63,34);
INSERT INTO 시험 (학번, 국어, 영어, 수학) VALUES ('12938335', 32,36,81);
INSERT INTO 시험 (학번, 국어, 영어, 수학) VALUES ('11948285', 33,58,81);
INSERT INTO 시험 (학번, 국어, 영어, 수학) VALUES ('11459913', 43,82,97);
INSERT INTO 시험 (학번, 국어, 영어, 수학) VALUES ('09374395', 51,84,79);
INSERT INTO 시험 (학번, 국어, 영어, 수학) VALUES ('15578271', 48,44,49);
INSERT INTO 시험 (학번, 국어, 영어, 수학) VALUES ('15309170', 86,66,93);
INSERT INTO 시험 (학번, 국어, 영어, 수학) VALUES ('15589962', 55,96,86);
INSERT INTO 시험 (학번, 국어, 영어, 수학) VALUES ('09286476', 97,82,60);
INSERT INTO 시험 (학번, 국어, 영어, 수학) VALUES ('13949165', 100,81,93);
INSERT INTO 시험 (학번, 국어, 영어, 수학) VALUES ('09946130', 46,88,97);
INSERT INTO 시험 (학번, 국어, 영어, 수학) VALUES ('14484171', 73,43,40);
INSERT INTO 시험 (학번, 국어, 영어, 수학) VALUES ('15700939', 63,57,30);
INSERT INTO 시험 (학번, 국어, 영어, 수학) VALUES ('08648751', 99,90,65);
INSERT INTO 시험 (학번, 국어, 영어, 수학) VALUES ('09791710', 56,47,30);
INSERT INTO 시험 (학번, 국어, 영어, 수학) VALUES ('16885578', 78,32,32);
INSERT INTO 시험 (학번, 국어, 영어, 수학) VALUES ('13551644', 80,95,97);


INSERT INTO 교수 (학과코드, 학과명, 학과담당교수) VALUES ('100', '국문학과', '이세종');
INSERT INTO 교수 (학과코드, 학과명, 학과담당교수) VALUES ('101', '영문학과', '마이클잭슨');
INSERT INTO 교수 (학과코드, 학과명, 학과담당교수) VALUES ('102', '법학과', '김판사');
INSERT INTO 교수 (학과코드, 학과명, 학과담당교수) VALUES ('103', '경영학과', '이재용');
INSERT INTO 교수 (학과코드, 학과명, 학과담당교수) VALUES ('104', '무용학과', '나유연');
INSERT INTO 교수 (학과코드, 학과명, 학과담당교수) VALUES ('105', '물리학과', '장영실');
INSERT INTO 교수 (학과코드, 학과명, 학과담당교수) VALUES ('106', '환경공학과', '송청결');

-- 각 테이블 갯수 출력
select count(*) from 대학생; -- 결과 : 66개
select count(*) from 시험; -- 결과 : 61개
select count(*) from 교수; -- 결과 : 7개


-- 대학생 테이블에서 학과코드를 중복제거하고 검색하세요 
SELECT COUNT(DISTINCT 학과코드) FROM 대학생;
select DISTINCT 학과코드 from 대학생;

-- 시험 테이블에서 국어가 90점 이상이거나 수학이 90점 이상인 학생의
-- 학번, 국어, 수학 점수를 출력하세요 (22개)
select 학번,국어,수학 from 시험 where 국어>=90 or 수학>=90;


-- 대학생 테이블에서 입학년도가 2015~2016년도 이면서
-- 학과코드가 105가 아닌 학생들의
-- 이름, 학번, 생년월일을 검색하세요

select 이름, 학번, 생년월일 from 대학생 where (입학년도='2015' or 입학년도='2016') and not (학과코드='105'); 
-- 정식코드 (char 타입은 '' 작은따옴표를 사용하여 입력해야함)

select 이름, 학번, 생년월일 from 대학생 where (입학년도=2015 or 입학년도=2016) and not(학과코드=105);
select 이름, 학번, 생년월일 from 대학생 where (입학년도 between 2015 and 2016) and not 학과코드=105;
-- 출력은 위와 같이 나오나 정식코드는 아님
-- varchar(입학년도) : 문자와 숫자를 보관할 수 있는 데이터베이스 관리 시스템의 필드(또는 컬럼)
-- 위 이유때문에 조건문에 숫자를 입력해도 문자로 인식되어져서 출력이 올바르게 이루어짐


-- 시험 테이블에서 1차 수학점수의 내림차순으로 정렬하고
-- 2차 영어점수의 오름차순으로 정렬하되
-- 학번, 수학, 영어점수만 검색하시오
-- 출력 결과는 10개만 나오게 하세요

select 학번, 수학, 영어 from 시험 order by 수학 desc, 영어  limit 10; 

-- 대학생 테이블에서 입학년도가 2016년이 아니면서 성별이 남자인 학생의
-- 인원수를 검색하되, 별명은 남학생 인원수로 설정하시오
select count(*) as '남학생 인원수' from 대학생 where not (입학년도='2016') and 성별='M';
select count(*) as '남학생 인원수' from 대학생 where 입학년도!='2016' and 성별='M'; -- 위와 같음

-- 대학생 테이블에서 학과코드별로 인원수를 검색하세요
select 학과코드,count(*) as '학과코드 인원수' from 대학생 GROUP BY 학과코드;

-- 대학생 테이블에서 입학년도가 2015년 학생들의 학과코드별 인원수를 검색하세요
select 학과코드,count(*) as '2015년 인원수' from 대학생 where 입학년도='2015' GROUP BY 학과코드;

-- 대학생 테이블에서 입학년도가 2015년인 학생들 중
-- 학과코드별로 2명 이상의 인원수인 데이터에 대해서만
-- 학과코드별 인원수를 검색하세요
select 학과코드,count(*) as '2015년 인원수' from 대학생 where 입학년도='2015' GROUP BY 학과코드 HAVING count(*)>=2;


-- 교수 테이블에서 마씨 성을 가진 교수의
-- 학과코드, 학과담당교수를 검색하세요ALTER
select 학과코드,학과담당교수 from 교수 where 학과담당교수 like '마%';

-- 대학생 테이블에서 이름이 '제'로 시작하는
-- 학생들의 이름, 학번, 생년월일을 검색하되
-- 성별이 여자인 학생들만 검색하세요
select 이름,학번,생년월일 from 대학생 where 이름 like '제%' and 성별='F';

-- 성별이 여자이거나 국어점수가 90점 이상인 학생의 학번을 검색하세요
select 학번 from 대학생 where 성별='F' UNION select 학번 from 시험 where 국어>=90;

-- 수학점수가 96점 이상인 학생의 이름을 검색하세요
select 이름 from 대학생 where 학번 in(select 학번 from 시험 where 수학>=96); 

-- 성별이 여자이면서 국어점수가 90점 이상인 학생의 학번을 검색하세요
select 학번 from 대학생 where 성별='F' and 학번 in(select 학번 from 시험 where 국어>=90);

-- 학과명이 국문학과나 영문학과인 학생의 이름을 검색하세요
select 이름 from 대학생 where 학과코드 in(select 학과코드 from 교수 where 학과명='영문학과' or 학과명='국문학과');

-- 대학생과 시험 테이블을 사용하시오
-- 시험을 응시한 학생의 이름을 검색하세요
select 이름 from 대학생 join 시험 on 대학생.학번=시험.학번;

-- 대학생과 시험 테이블을 사용하시오
-- 시험을 응시한 학생의 이름을 검색하되 국어점수가 80점 이상만 검색하세요
select 이름 from 대학생 join 시험 on 대학생.학번=시험.학번 where 국어>=80;

-- 대학생과 시험 테이블을 사용하시오
-- 이름, 입학년도, 국어, 수정영어점수(영어점수의 90%로 설정)를 검색하되
-- 수학이 80점 이상인 학생만 검색하세요
select 이름,입학년도,국어,영어*0.9 as 수정영어점수 from 대학생 join 시험 on 대학생.학번=시험.학번 where 수학>=80;
select 이름,입학년도,국어,영어*0.9 as 수정영어점수 from 대학생 join 시험 on 대학생.학번=시험.학번 and 수학>=80;

-- 이름, 수학, 영어, 학과명을 검색하되
-- 국어점수가 80점 이상인 데이터를 검색하세요
select 이름, 수학, 영어, 학과명 from (교수 join 대학생 on 교수.학과코드=대학생.학과코드) join 시험 on 대학생.학번=시험.학번 where 국어>=80;
select 이름, 수학, 영어, 학과명 from (대학생 join 시험 on 대학생.학번=시험.학번) join 교수 on 대학생.학과코드=교수.학과코드 where 국어>=80;

-- 대학생과 시험 테이블을 사용하시오
-- 시험을 응시하지 않은 학생을 포함하여
-- 이름, 학번, 국어, 영어 점수를 검색하세요
select 이름,대학생.학번,국어,영어 from 대학생 left outer join 시험 on 대학생.학번=시험.학번;

-- 시험을 응시하지 않은 학생의 이름을 검색하세요
select 이름 from 대학생 where 학번 not in (select 학번 from 시험);
select 이름 from 대학생 left outer join 시험 on 대학생.학번=시험.학번 where 국어 is null;


-- 대학생 테이블에서 성별이 남인 남학생만 끌어와 새로운 '남자대학생' 테이블 생성
create table 남자대학생 as (select * from 대학생 where 성별='M');
select * from 남자대학생;  -- 38개

-- 우수응시자 테이블을 생성하세요 (시험 테이블 이용)
-- 국어와 영어가 80점 이상인 학생으로 생성하세요
create table 우수응시자 as (select * from 시험 where 국어>=80 and 영어>=80);

select * from 우수응시자;

-- 교수 테이블을 복사해서 교수2 테이블을 생성하세요
create table 교수2 as(select * from 교수);

-- 교수2 테이블에서 물리학과 교수 이름을 아인슈타인으로 변경하세요
update 교수2 set 학과담당교수='아인슈타인' where 학과명='물리학과';
select * from 교수2;

-- 대학생, 시험 테이블을 복사하여 대학생2, 시험2 테이블을 생성하세요
create table 대학생2 as(select * from 대학생);
create table 시험2 as(select * from 시험);

-- 대학생2 테이블에서 시험에 응시하지 않은 학생의 전화번호를 null로 설정하세요
update 대학생2 set 전화번호=null where 학번 not in (select 학번 from 시험);
select * from 대학생2 where 전화번호 is null;

-- 대학생2에서 성별을 '남', '여'로 변경하세요(M은 남, F는 여)
update 대학생2 set 성별='남' where 성별='M';
update 대학생2 set 성별='여' where 성별='F';
select * from 대학생2;

-- 대학생2, 교수2 테이블을 이용하세요
-- 학과별 인원이 10명 미만인 교수2 테이블 정보를 삭제하세요
delete from 교수2 where 학과코드 in(select 학과코드 from 대학생2 group by 학과코드 having count(*)<10);
select * from 교수2; 


-- 대학생2 학번(기본키), 학과코드(외래키)
-- 시험2 학번(외래키)
-- 교수2 학과코드(기본키) 설정해서 테이블을 생성하세요

-- 테이블 생성 순서 : 교수2, 대학생2, 시험2
-- 기본키가 생성되어야 외래키를 만들 수 있기 때문에 교수2의 기본키 먼저 설정 후
-- 대학생2 외래키 설정하고 시험2 설정

-- 삭제 순서 : 시험2, 대학생2, 교수2

create table 대학생2
(
	이름 varchar(100) null,     
	학번 varchar(11) not null,
	생년월일 varchar(6) null,
	성별 varchar(1) null,
	입학년도 varchar(4) null,
	전화번호 varchar(11) null,
	학과코드 varchar(3) null,
    PRIMARY KEY(학번),
    FOREIGN KEY(학과코드) references 교수2(학과코드)
);

create table 시험2
(
	학번 varchar(11) null,
	국어 int,
	영어 int,
	수학 int,
    foreign key(학번) REFERENCES 대학생2(학번)
);

create table 교수2
(
	학과코드 varchar(3) not null,
	학과명 varchar(100) null,
	학과담당교수 varchar(100) null,
    primary key(학과코드)
);

-- 교수 테이블에 있는 데이터들을 교수2에 넣음
insert into 교수2 select * from 교수;
insert into 대학생2 select * from 대학생;
insert into 시험2 select * from 시험;

-- 시험2 테이블에 합계라는 필드를 추가하세요
-- 합계 필드는 국어 + 영어 + 수학 점수의 합계로 데이터를 삽입하세요
alter table 시험2 add 합계 int;
update 시험2 set 합계=국어+영어+수학;

-- 뷰(고득점학생)   v1_고득점학생
-- 합계가 270점 이상인 학생의
-- 이름, 학번, 점수(합계를 점수로 이름변환) 검색
create view v1_고득점학생(이름, 학번, 점수)
as select 이름, 대학생2.학번, 합계 from 대학생2 join 시험2 on 대학생2.학번=시험2.학번 where 합계>=270;
-- 학번 앞에 대학생2를 적어주는 이유는 대학생2, 시험2 모두 학번이 있지만
-- 대학생2의 학번이 기본키이기 때문
select * from v1_고득점학생;
show tables;

-- 대학생2와 시험2 테이블을 활용하여 V2_남학생 뷰를 생성하세요
-- V2_남학생 뷰는 이름, 학번, 학과코드, 점수로 구성하세요
create view V2_남학생(이름,학번,학과코드,점수) 
as select 대학생2.이름, 대학생2.학번, 대학생2.학과코드, 시험2.합계 
from 대학생2 join 시험2 on 대학생2.학번=시험2.학번
where 대학생2.성별='M';

select * from V2_남학생;

-- V2_남학생 뷰를 활용하여 V3_고득점남학생 뷰를 생성하세요
-- V3_고득점남학생 이름, 학번, 점수로 구성하되
-- 현재 점수가 250점 이상인 데이터로 구성하세요

create view V3_고득점남학생(이름,학번,점수)
as select 이름,학번,점수 from V2_남학생 where 점수>=250;
-- 'V2_남학생'은 필드가 4개이고 'V3_고득점남학생'은 필드가 3개이기 때문에
-- *로 적지않고 필드를 모두 적어줘야 함
-- create view V3_고득점남학생(이름,학번,점수)
-- as select * from V2_남학생 where 점수>=250;   // 오류

select * from V3_고득점남학생;